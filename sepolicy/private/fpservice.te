type fpservice, domain;
type fpservice_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(fpservice);

domain_trans(init, rootfs, fpservice)

allow fpservice goodix_fp_service:service_manager add;
allow fpservice self:netlink_socket { create bind write read };
allow fpservice tee_device:chr_file { ioctl read write open };
allow fpservice ion_device:chr_file { read open ioctl };
allow fpservice goodix_fp_device:chr_file { ioctl read write open };
allow fpservice vendor_shell_exec:file entrypoint;
allow fpservice vendor_toolbox_exec:file execute_no_trans;
allow fpservice goodix_fp_exec:file { entrypoint execute_no_trans };
allow fpservice sysfs_graphics:dir search;
allow fpservice sysfs_graphics:file { read open };
allow fpservice sysfs_leds:dir search;

allow fpservice proc_fpmod:file { read open };

set_prop(fpservice, fp_goodix_prop)

vndbinder_use(fpservice);

binder_call(fpservice, hal_fingerprint_default)
